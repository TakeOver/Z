
let eval = (what) -> 
        eval!(parse!(what))

let showln! = (args...) -> 
        show!(...args,"\n");

let read! = () -> 
        parse!(input());

let map = (func, list) -> {
        var res = []
        for i = 0 to list.len()-1 
                res[i] = func(list[i])
        res
}

let reduce = (func, list) -> {
        let len = list.len()
        match len {
                0 => nil
                _ => {
                        var res = list[0]
                        for i = 1 to len-1
                                res = func(res,list[i])
                        res
                }
        }
}
let compose = (fun1,fun2) -> 
        (args...) -> 
                fun1(fun2(...args))

let bind! = (self,method) -> 
        (args...) ->
                method(self,...args)

let for_each = (list,func) -> {
        for i = 0 to list.len()-1 
                func(list[i],i)
}
String.each = (Array.each = for_each)

export for_each
export reduce
export map
export eval
export read!
export compose
export bind!
export showln!