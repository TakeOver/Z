let ast_node = #{
        type = "",
        children = [],
        init = (self,type,children)-> {
                self.type = type
                self.children = children
        }
        append = (self,what) -> 
                self.children[]=what
        get_child = (self,num) -> 
                self.children[num]
        to_ast = native_to_ast
}
let binop = (op,lhs,rhs) -> 
        ast_node.new("BinOp",[op,lhs,rhs])
let fcall = (fun,args) -> 
        ${fun(...args)}